#  https://kafka.apache.org/documentation/#operations

# Create a Kafka topic using command line
kafka-topics.sh --create --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 \
                --topic streaming.week2.tweets \
                --partitions 3 \
                --replication-factor 2

# list topics - should see three partitions for topic streaming.week2.tweets
kafka-topics.sh --zookeeper zookeeper:2181 --list

# if you ever would like to delete a topic to restart from scratch
kafka-topics.sh --delete --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094  --topic streaming.week2.tweets

# describe a topic to see # of partitions and replicas
kafka-topics.sh --zookeeper zookeeper:2181 --topic streaming.week2.tweets --describe

# reset partition off set to the earliest for consumer group id "streamingcourse.week2.KafkaSimpleTweetConsumer"
kafka-consumer-groups.sh --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 \
 --execute --reset-offsets \
 --group streamingcourse.week2.KafkaSimpleTweetConsumer \
 --topic streaming.week2.tweets \
 --to-earliest

# can confirm using the kafka drop UI, the Consumer Offset column should contain 0 for each partition
http://localhost:9000/consumer/streamingcourse.week2.KafkaSimpleTweetConsumer

# reset partition off set to the earliest for consumer group id "streamingcourse.week2.KafkaConsumerGroupTweetConsumer"
 kafka-consumer-groups.sh --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 \
  --execute --reset-offsets \
  --group streamingcourse.week2.KafkaConsumerGroupTweetConsumer \
  --topic streaming.week2.tweets \
  --to-earliest

 # can confirm using the kafka drop UI, the Consumer Offset column should contain 0 for each partition
 http://localhost:9000/consumer/streamingcourse.week2.KafkaConsumerGroupTweetConsumer