# ====================================================================================================
# ====================== Working with mobile usage example related  =================================
# ====================================================================================================

# log into docker instance
docker exec -it kafka-broker1 bash

# Create a Kafka topic using command line to produce department info. in JSON format to streaming.week2.department
kafka-topics.sh --create --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 \
                 --topic streaming.week2.department \
                 --partitions 1 \
                 --replication-factor 2

# describe the topic to make sure it exists and is correct
kafka-topics.sh --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 \
    --describe -topic streaming.week2.department

# Create a Kafka topic using command line to produce mobile usage in JSON format to streaming.week2.mobile_usage
kafka-topics.sh --create --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 \
                 --topic streaming.week2.mobile_usage \
                 --partitions 3 \
                 --replication-factor 2

# describe the topic to make sure it exists and is correct
kafka-topics.sh --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 \
    --describe -topic streaming.week2.mobile_usage

# if you ever need to delete the topic
kafka-topics.sh --delete --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094  --topic <topic name>

# run MobileUsageProducer to produce some records, which are generated with random value.
* The generated event time is advancing forward as each record is created

# run MobileUsageDisplay

# reset the offset (WARNING: make sure to stop the running streaming application first)
kafka-streams-application-reset.sh --force --application-id DepartmentInfoDisplay-app \
           --bootstrap-servers kafka1:29092,kafka2:29093,kafka3:29094 \
           --input-topics streaming.week2.department


kafka-streams-application-reset.sh --force --application-id MobileUsageDisplay-app \
           --bootstrap-servers kafka1:29092,kafka2:29093,kafka3:29094 \
           --input-topics streaming.week2.mobile_usage


# produce mobile usage from the console
kafka-console-producer.sh --broker-list kafka1:29092,kafka2:29093,kafka3:29094 \
     --topic streaming.week2.mobile_usage \
     --property parse.key=true \
     --property key.separator=":"